apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def androidId = rootProject.ext.androidId
def support = rootProject.ext.support
def isRelease = rootProject.ext.isRelease
def testSupport = rootProject.ext.testSupport
def androidTestSupport = rootProject.ext.androidTestSupport

android {
    compileSdkVersion androidId.compileSdkVersion
    buildToolsVersion androidId.buildToolsVersion

    defaultConfig {
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    support.each { k, v -> implementation v }
    testSupport.each { k, v -> testImplementation v }
    androidTestSupport.each { k, v -> androidTestImplementation v }

    //采用api来依赖，可以使得其他依赖了本library的module，也能使用api依赖的依赖
    //每个模块都需要用到routerapim模块对外提供的数据接口
    //所以用api来依赖
    api project(":routerapi")
}
